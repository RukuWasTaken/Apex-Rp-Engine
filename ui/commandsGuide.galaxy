//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2019, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

//fuk keepin that writin here sOME oTHER iNDIAN d O iT
//Dialog for commands guide
int libapx_ui_commands;
int libapx_ui_commands_exit;

//Dialog Items
static int libapx_ui_commands_category;
static int libapx_ui_commands_commands;
static int libapx_ui_commands_output;

void libapx_ui_commands_init() {
  //Main Dialog init
  libapx_ui_commands = libapx_create_dialog(670, 750, c_anchorTopLeft, libapx_ui_panel_spacing, 0);
  libapx_ui_commands_exit = libapx_create_dialog_close_btn(libapx_ui_commands, 670, 750, c_anchorTopLeft, libapx_ui_panel_spacing, 0);

  //Title
  libapx_create_dialog_title(libapx_ui_commands , 300, 40, 00, 40, "Commands Guide", libapx_UI_HEADER1, 200);
  libapx_create_dialog_label(libapx_ui_commands , 300, 40, c_anchorTop, -160, 84, "Categories", libapx_UI_HEADER1);
  libapx_create_dialog_label(libapx_ui_commands , 300, 40, c_anchorTop,  155, 84, "Commands", libapx_UI_HEADER1);

  //lists
  libapx_ui_commands_category = libapx_create_dialog_list(libapx_ui_commands, 280, 300, c_anchorTop, -155, 124);
  libapx_ui_commands_commands = libapx_create_dialog_list(libapx_ui_commands, 280, 300, c_anchorTop, 155, 124);
  libapx_ui_commands_output = libapx_create_dialog_list(libapx_ui_commands, 590, 200, c_anchorTop, 0, 454);

  //Trigger for category selection
  TriggerAddEventDialogControl(TriggerCreate("libapx_ui_category_select"), c_playerAny, libapx_ui_commands_category, c_triggerControlEventTypeSelectionChanged);
  //Trigger for command selection
  TriggerAddEventDialogControl(TriggerCreate("libapx_ui_commands_select"), c_playerAny, libapx_ui_commands_commands , c_triggerControlEventTypeSelectionChanged);



}
void libapx_ui_commands_init_player(int player) {
  //Stringword not working on string?
  int i = 0;
  while(commands_guide_get_entry(i) != "") {
    DialogControlAddItem(libapx_ui_commands_category, PlayerGroupSingle(player), StringToText(commands_guide_get_entry(i)));
    i+=1;
  }
}
bool libapx_ui_category_select(bool testConds, bool runActions) {
  int player = EventPlayer();
  int desiredType;
  int i = 0;
  DialogControlRemoveAllItems(libapx_ui_commands_commands, PlayerGroupSingle(player));
  desiredType=DialogControlGetSelectedItem(libapx_ui_commands_category, player)-1;
  while(g_commands_guide_entries[i].name != "") {
    if(g_commands_guide_entries[i].type == desiredType) {
      DialogControlAddItem(libapx_ui_commands_commands, PlayerGroupSingle(player), StringToText(g_commands_guide_entries[i].name));
    }
    i+=1;
  }
  return true;
}
bool libapx_ui_commands_select(bool testConds, bool runActions) {
  int player = EventPlayer();
  int desiredType = 1;
  int desiredCommand = 1;
  int commandIndex;
  int i;
  int currentCommand = 0;
  DialogControlRemoveAllItems(libapx_ui_commands_output, PlayerGroupSingle(player));
  desiredType=DialogControlGetSelectedItem(libapx_ui_commands_category, player)-1;
  desiredCommand=DialogControlGetSelectedItem(libapx_ui_commands_commands, player)-1;
  
  i = 0;
  //Source
  while(g_commands_guide_entries[i].name != "") {
    if(g_commands_guide_entries[i].type == desiredType) {

      if(currentCommand == desiredCommand) {
        command_guide_format_description(libapx_ui_commands_output, PlayerGroupSingle(player),g_commands_guide_entries[i].description);
        return true;
      }
      currentCommand += 1;
    }
    i+=1;
  }
  return true;
}
